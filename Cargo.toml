[workspace]
resolver = "2"
members  = ["crates/*", "tasks/*"]

[workspace.package]
authors     = ["Yagiz Nizipli <yagiz@nizipli.com"]
description = "Pacquet"
edition     = "2021"
homepage    = "https://github.com/anonrig/pacquet"
keywords    = ["nodejs", "package", "manager", "pnpm", "npm"]
license     = "MIT"
repository  = "https://github.com/anonrig/pacquet"

[workspace.dependencies]
# Crates
pacquet-cli              = { path = "crates/cli" }
pacquet-fs               = { path = "crates/fs" }
pacquet-registry         = { path = "crates/registry" }
pacquet-tarball          = { path = "crates/tarball" }
pacquet-testing-utils    = { path = "crates/testing-utils" }
pacquet-package-manifest = { path = "crates/package-manifest" }
pacquet-package-manager  = { path = "crates/package-manager" }
pacquet-lockfile         = { path = "crates/lockfile" }
pacquet-network          = { path = "crates/network" }
pacquet-npmrc            = { path = "crates/npmrc" }
pacquet-executor         = { path = "crates/executor" }
pacquet-diagnostics      = { path = "crates/diagnostics" }
pacquet-store-dir        = { path = "crates/store-dir" }

# Tasks
pacquet-registry-mock = { path = "tasks/registry-mock" }

# Dependencies
advisory-lock      = { version = "0.3.0" }
async-recursion    = { version = "1.0.5" }
clap               = { version = "4", features = ["derive", "string"] }
command-extra      = { version = "1.0.0" }
base64             = { version = "0.21.5" }
dashmap            = { version = "5.5.3" }
derive_more        = { version = "1.0.0-beta.6", features = ["full"] }
dunce              = { version = "1.0.4" }
home               = { version = "0.5.5" }
insta              = { version = "1.34.0", features = ["yaml", "glob", "walkdir"] }
itertools          = { version = "0.11.0" }
futures-util       = { version = "0.3.29" }
miette             = { version = "5.9.0", features = ["fancy"] }
num_cpus           = { version = "1.16.0" }
os_display         = { version = "0.1.3" }
reflink-copy       = { version = "0.1.14" }
junction           = { version = "1.0.0" }
reqwest            = { version = "0.11", default-features = false, features = ["json", "native-tls-vendored"] }
node-semver        = { version = "2.1.0" }
pipe-trait         = { version = "0.4.0" }
portpicker         = { version = "0.1.1" }
rayon              = { version = "1.8.0" }
serde              = { version = "1.0.188", features = ["derive"] }
serde_ini          = { version = "0.2.0" }
serde_json         = { version = "1.0.107", features = ["preserve_order"] }
serde_yaml         = { version = "0.9.1" }
sha2               = { version = "0.10.8" }
split-first-char   = { version = "0.0.0" }
ssri               = { version = "9.0.0" }
strum              = { version = "0.25.0", features = ["derive"] }
sysinfo            = { version = "0.29.10" }
tar                = { version = "0.4.40" }
text-block-macros  = { version = "0.1.1" }
tracing            = { version = "0.1.40" }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
tokio              = { version = "1", features = ["rt", "rt-multi-thread", "macros"] }
walkdir            = { version = "2.4.0" }
which              = { version = "4.4.2" }
zune-inflate       = { version = "0.2.54" }

# Dev dependencies
assert_cmd        = { version = "2.0.12" }
criterion         = { version = "0.5.1", features = ["async_tokio"] }
pretty_assertions = { version = "1.4.0" }
project-root      = { version = "0.2.2" }
tempfile          = { version = "3.8.1" }
mockito           = { version = "1.2.0" }

[workspace.metadata.workspaces]
allow_branch = "main"

[profile.release]
opt-level     = 3
lto           = "fat"
codegen-units = 1
strip         = "symbols"
debug         = false
panic         = "abort"   # Let it crash and force ourselves to write safe Rust.

# Use the `--profile release-debug` flag to show symbols in release mode.
# e.g. `cargo build --profile release-debug`
[profile.release-debug]
inherits = "release"
strip    = false
debug    = true
